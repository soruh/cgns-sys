/* automatically generated by rust-bindgen */

pub const CG_BUILD_LEGACY: u32 = 1;
pub const CG_BUILD_64BIT: u32 = 0;
pub const CG_BUILD_SCOPE: u32 = 0;
pub const CG_BUILD_BASESCOPE: u32 = 0;
pub const CG_MAX_INT32: u32 = 2147483647;
pub const CG_HAVE_STAT64_STRUCT: u32 = 0;
pub const CG_SIZEOF_SIZE: u32 = 32;
pub const CG_SIZE_DATATYPE: &'static [u8; 3usize] = b"I4\0";
pub const FORTRAN_DEFAULT_INTEGER_C_INT64_T: u32 = 0;
pub const CGIO_MODE_READ: u32 = 0;
pub const CGIO_MODE_WRITE: u32 = 1;
pub const CGIO_MODE_MODIFY: u32 = 2;
pub const CGIO_FILE_NONE: u32 = 0;
pub const CGIO_FILE_ADF: u32 = 1;
pub const CGIO_FILE_HDF5: u32 = 2;
pub const CGIO_FILE_ADF2: u32 = 3;
pub const CGIO_CONTIGUOUS: u32 = 0;
pub const CGIO_COMPACT: u32 = 1;
pub const CGIO_CHUNKED: u32 = 2;
pub const CGIO_MAX_DATATYPE_LENGTH: u32 = 2;
pub const CGIO_MAX_DIMENSIONS: u32 = 12;
pub const CGIO_MAX_NAME_LENGTH: u32 = 32;
pub const CGIO_MAX_LABEL_LENGTH: u32 = 32;
pub const CGIO_MAX_VERSION_LENGTH: u32 = 32;
pub const CGIO_MAX_DATE_LENGTH: u32 = 32;
pub const CGIO_MAX_ERROR_LENGTH: u32 = 80;
pub const CGIO_MAX_LINK_DEPTH: u32 = 100;
pub const CGIO_MAX_FILE_LENGTH: u32 = 1024;
pub const CGIO_MAX_LINK_LENGTH: u32 = 4096;
pub const CGIO_ERR_NONE: u32 = 0;
pub const CGIO_ERR_BAD_CGIO: i32 = -1;
pub const CGIO_ERR_MALLOC: i32 = -2;
pub const CGIO_ERR_FILE_MODE: i32 = -3;
pub const CGIO_ERR_FILE_TYPE: i32 = -4;
pub const CGIO_ERR_NULL_FILE: i32 = -5;
pub const CGIO_ERR_TOO_SMALL: i32 = -6;
pub const CGIO_ERR_NOT_FOUND: i32 = -7;
pub const CGIO_ERR_NULL_PATH: i32 = -8;
pub const CGIO_ERR_NO_MATCH: i32 = -9;
pub const CGIO_ERR_FILE_OPEN: i32 = -10;
pub const CGIO_ERR_READ_ONLY: i32 = -11;
pub const CGIO_ERR_NULL_STRING: i32 = -12;
pub const CGIO_ERR_BAD_OPTION: i32 = -13;
pub const CGIO_ERR_FILE_RENAME: i32 = -14;
pub const CGIO_ERR_TOO_MANY: i32 = -15;
pub const CGIO_ERR_DIMENSIONS: i32 = -16;
pub const CGIO_ERR_BAD_TYPE: i32 = -17;
pub const CGIO_ERR_NOT_HDF5: i32 = -18;
pub type cgint_f = ::std::os::raw::c_int;
pub type cglong_t = ::std::os::raw::c_long;
pub type cgulong_t = ::std::os::raw::c_ulong;
extern "C" {
    pub fn cgio_path_add(path: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_path_delete(path: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_find_file(
        parentfile: *const ::std::os::raw::c_char,
        filename: *const ::std::os::raw::c_char,
        file_type: ::std::os::raw::c_int,
        max_path_len: ::std::os::raw::c_int,
        pathname: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_is_supported(file_type: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_configure(
        what: ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_cleanup();
}
extern "C" {
    pub fn cgio_check_file(
        filename: *const ::std::os::raw::c_char,
        file_type: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_compute_data_size(
        data_type: *const ::std::os::raw::c_char,
        num_dims: ::std::os::raw::c_int,
        dim_vals: *const ::std::os::raw::c_int,
        count: *mut cglong_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_check_dimensions(
        ndims: ::std::os::raw::c_int,
        dims: *const cglong_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_copy_dimensions(
        ndims: ::std::os::raw::c_int,
        dims64: *const cglong_t,
        dims: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_open_file(
        filename: *const ::std::os::raw::c_char,
        file_mode: ::std::os::raw::c_int,
        file_type: ::std::os::raw::c_int,
        cgio_num: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_close_file(cgio_num: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_compress_file(
        cgio_num: ::std::os::raw::c_int,
        filename: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_copy_file(
        cgio_num_inp: ::std::os::raw::c_int,
        cgio_num_out: ::std::os::raw::c_int,
        follow_links: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_flush_to_disk(cgio_num: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_library_version(
        cgio_num: ::std::os::raw::c_int,
        version: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_file_version(
        cgio_num: ::std::os::raw::c_int,
        file_version: *mut ::std::os::raw::c_char,
        creation_date: *mut ::std::os::raw::c_char,
        modified_date: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_root_id(
        cgio_num: ::std::os::raw::c_int,
        rootid: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_file_type(
        cgio_num: ::std::os::raw::c_int,
        file_type: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_error_code(
        errcode: *mut ::std::os::raw::c_int,
        file_type: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn cgio_error_message(error_msg: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_error_exit(msg: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn cgio_error_abort(abort_flag: ::std::os::raw::c_int);
}
extern "C" {
    pub fn cgio_create_node(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        name: *const ::std::os::raw::c_char,
        id: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_new_node(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        name: *const ::std::os::raw::c_char,
        label: *const ::std::os::raw::c_char,
        data_type: *const ::std::os::raw::c_char,
        ndims: ::std::os::raw::c_int,
        dims: *const ::std::os::raw::c_int,
        data: *const ::std::os::raw::c_void,
        id: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_delete_node(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        id: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_move_node(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        id: f64,
        new_pid: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_copy_node(
        cgio_num_inp: ::std::os::raw::c_int,
        id_inp: f64,
        cgio_num_out: ::std::os::raw::c_int,
        id_out: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_release_id(cgio_num: ::std::os::raw::c_int, id: f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_is_link(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        link_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_link_size(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        file_len: *mut ::std::os::raw::c_int,
        name_len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_create_link(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        name: *const ::std::os::raw::c_char,
        filename: *const ::std::os::raw::c_char,
        name_in_file: *const ::std::os::raw::c_char,
        id: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_link(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        filename: *mut ::std::os::raw::c_char,
        name_in_file: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_number_children(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        num_children: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_children_ids(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        start: ::std::os::raw::c_int,
        max_ret: ::std::os::raw::c_int,
        num_ret: *mut ::std::os::raw::c_int,
        ids: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_children_names(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        start: ::std::os::raw::c_int,
        max_ret: ::std::os::raw::c_int,
        name_len: ::std::os::raw::c_int,
        num_ret: *mut ::std::os::raw::c_int,
        names: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_node_id(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        name: *const ::std::os::raw::c_char,
        id: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_name(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        name: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_label(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        label: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_data_type(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        data_type: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_data_size(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        data_size: *mut cglong_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_get_dimensions(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        num_dims: *mut ::std::os::raw::c_int,
        dims: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_read_all_data(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_read_all_data_type(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        m_data_type: *const ::std::os::raw::c_char,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_read_block_data_type(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        b_start: ::std::os::raw::c_int,
        b_end: ::std::os::raw::c_int,
        m_data_type: *const ::std::os::raw::c_char,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_read_block_data(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        b_start: ::std::os::raw::c_int,
        b_end: ::std::os::raw::c_int,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_read_data(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        s_start: *const ::std::os::raw::c_int,
        s_end: *const ::std::os::raw::c_int,
        s_stride: *const ::std::os::raw::c_int,
        m_num_dims: ::std::os::raw::c_int,
        m_dims: *const ::std::os::raw::c_int,
        m_start: *const ::std::os::raw::c_int,
        m_end: *const ::std::os::raw::c_int,
        m_stride: *const ::std::os::raw::c_int,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_read_data_type(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        s_start: *const ::std::os::raw::c_int,
        s_end: *const ::std::os::raw::c_int,
        s_stride: *const ::std::os::raw::c_int,
        m_data_type: *const ::std::os::raw::c_char,
        m_num_dims: ::std::os::raw::c_int,
        m_dims: *const ::std::os::raw::c_int,
        m_start: *const ::std::os::raw::c_int,
        m_end: *const ::std::os::raw::c_int,
        m_stride: *const ::std::os::raw::c_int,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_set_name(
        cgio_num: ::std::os::raw::c_int,
        pid: f64,
        id: f64,
        name: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_set_label(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        label: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_set_dimensions(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        data_type: *const ::std::os::raw::c_char,
        num_dims: ::std::os::raw::c_int,
        dims: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_write_all_data(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        data: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_write_all_data_type(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        m_data_type: *const ::std::os::raw::c_char,
        data: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_write_block_data(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        b_start: ::std::os::raw::c_int,
        b_end: ::std::os::raw::c_int,
        data: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_write_data(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        s_start: *const ::std::os::raw::c_int,
        s_end: *const ::std::os::raw::c_int,
        s_stride: *const ::std::os::raw::c_int,
        m_num_dims: ::std::os::raw::c_int,
        m_dims: *const ::std::os::raw::c_int,
        m_start: *const ::std::os::raw::c_int,
        m_end: *const ::std::os::raw::c_int,
        m_stride: *const ::std::os::raw::c_int,
        data: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn cgio_write_data_type(
        cgio_num: ::std::os::raw::c_int,
        id: f64,
        s_start: *const ::std::os::raw::c_int,
        s_end: *const ::std::os::raw::c_int,
        s_stride: *const ::std::os::raw::c_int,
        m_data_type: *const ::std::os::raw::c_char,
        m_num_dims: ::std::os::raw::c_int,
        m_dims: *const ::std::os::raw::c_int,
        m_start: *const ::std::os::raw::c_int,
        m_end: *const ::std::os::raw::c_int,
        m_stride: *const ::std::os::raw::c_int,
        data: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
